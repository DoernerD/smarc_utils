<launch>

	<!-- Mode flags -->
	<arg name="namespace" default="lolo_auv"/>
	<arg name="navigation_on" default="true"/>
	<arg name="gazebo_env" default="random_rocks"/>

	<!-- Initial position of the AUV -->
	<arg name="x" default="-60.0"/>
	<arg name="y" default="0.0"/>
	<arg name="z" default="-95.0"/>
	<arg name="yaw" default="0.0"/>
	
	<!-- Underwater scenario for Gazebo -->
	<include file="$(find smarc_worlds)/launch/$(arg gazebo_env).launch"/>

	<!-- Launch AUV -->
	<include file="$(find smarc_private_auvs)/models/$(arg namespace)/launch/upload_$(arg namespace).launch">
		<arg name="namespace" value="$(arg namespace)"/>
		<arg name="x" value="$(arg x)"/>
		<arg name="y" value="$(arg y)"/>
		<arg name="z" value="$(arg z)"/>
		<arg name="yaw" value="$(arg yaw)"/>
	</include>

	<!-- Control components -->
	<node pkg="smarc_keyboard_teleop" type="$(arg namespace)_teleop.py" name="$(arg namespace)_teleop" output="screen"/>
	
	<!-- Navigation components -->
  	<include if="$(arg navigation_on)" file="$(find auv_ekf_slam)/launch/ekf_slam.launch">
  		<arg name="namespace" value="$(arg namespace)"/>
	</include>

	<!-- Utils -->
	<!-- Publishes: - tf world to odom based on initial pose of the AUV 
					- Ground truth pose in odom frame
					- if navigation_on = false, it also publishes the odom tf -->
    <node pkg="odom_tf_bc" name="odom_tf_bc_node" type="odom_tf_bc_node" output="screen">
		<param name="gt_topic" value="/$(arg namespace)/pose_gt"/>
		<param name="parent_frame" value="world"/>
		<param name="odom_frame" value="odom"/>
		<param name="map_frame" value="map"/>
		<param name="base_frame" value="$(arg namespace)/base_link"/>
		<param name="bc_odom_tf" value="$(arg navigation_on)"/>
		<param name="gt_odom_topic" value="gt_in_odom"/>
    </node>

    <!-- Publishes objects populations the Gazebo scenario on RVIZ for visualization -->
    <node pkg="landmark_visualizer" name="landmark_visualizer_node" type="landmark_visualizer_node" output="screen">
    	<param name="map_srv" value="/gazebo/get_world_properties"/>
		<param name="landmarks_srv" value="/gazebo/get_model_state"/>
    </node>

</launch>
