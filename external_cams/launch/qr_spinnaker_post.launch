<launch>

  <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}] [${node}]: ${message}"/>


    <!-- <arg name="markerId"        default="105"/> -->
    <arg name="markerSize"      default="0.14"/>    <!-- in m -->
    <arg name="marker_frame"    default="aruco_marker_frame"/>
    <arg name="ref_frame"       default=""/>  <!-- leave empty and the pose will be published wrt param parent_name -->
    <arg name="corner_refinement" default="LINES" /> <!-- NONE, HARRIS, LINES, SUBPIX -->
    
    <arg name="namespace" default="cm_station"/>
    <arg name="debug" default="0"/>
    <arg name="mode" default="external"/>

    <arg name="reference_frame" default="cm_station/base_link"/>
    <!-- <arg name="reference_frame" default="cm_station/uw_camera"/> -->
    
    <!-- TF marker to ds_base_link -->
    <!-- This chain describes the TF from cm/base_link to the ds/base_link
        The first TF is from the cm_station/base_link to the detected aruco marker position
        The second TF is from the marker to the position of ds/base_link, including the rotation
        The third TF tilts the ds slightly to represent the orientation as shown in the video feed.
        Reason: The detection doesn't detect the full square properly, which results in a rotation. This 
                can be seen in the video, it's not a proper square as it should be. However, the 
                position vector still works fine, as it requires less features. Thus we manually
                do this transformation.-->
    <node name="cm_2_ds_marker_helper" pkg="tf" type="static_transform_publisher" args="-0.04 -0.8 -1.7 0 0 0 cm_station/base_link ds/marker_link_helper 100"/>
    <node name="ds_marker_2_ds_base_helper" pkg="tf" type="static_transform_publisher" args="-0.39 0 -0.18 1.571 0 -1.571 ds/marker_link_helper ds/base_link_helper 100"/>
    <node name="ds_helper_2_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0.1745 0 0 ds/base_link_helper ds/base_link 100"/>
    
    <!-- TF marker to sam/base_link -->
    <node name="qr_2_sam_base" pkg="tf" type="static_transform_publisher" args="-0.2898 0 -0.0825 0 0 0 sam/qr_link_0 sam/base_link_qr 100"/>

    <node name="decompress_node" pkg="image_transport" type="republish" args="compressed">
        <remap from="in" to="/image_raw"/>
        <remap from="out" to="/image_decompressed"/>
    </node>


    <!-- Aruco Detection -->
    <node name="aruco_marker_publisher" pkg="aruco_ros" type="marker_publisher" output="screen">
        <remap from="/image" to="/image_decompressed" />

        <param name="max_correction_rate" value="30"/> 
        <param name="image_is_rectified" value="True"/>
        <param name="marker_size" value="$(arg markerSize)"/>
        <param name="reference_frame" value="$(arg reference_frame)"/>
        <param name="use_camera_info" value="True"/>
    </node>

    <node pkg="image_view" type="image_view" name="image_view" output="screen">
        <remap from="/image" to="/aruco_marker_publisher/result" />
    </node>

    <!-- Load external parameter -->
	<group ns="external">
        <param name="cm_station_description"
            command="$(find xacro)/xacro '$(find cm_station_description)/robots/cm_station_default.urdf.xacro' debug:=$(arg debug) namespace:=$(arg namespace)"/>

        <param name="sam_description"
            command="$(find xacro)/xacro '$(find sam_description)/robots/sam_auv_$(arg mode).urdf.xacro' debug:=$(arg debug) namespace:=sam" />
    </group>
    
    <!-- Command Station Parameter -->
    <node name="cm_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <remap from="robot_description" to="external/cm_station_description"/>

        <param name="use_gui" value="false"/>
        <rosparam param="source_list">["command_states"]</rosparam>
    </node>
    
    <node name="cm_robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <remap from="robot_description" to="external/cm_station_description"/>        
    </node>

    <!-- SAM Parameter -->
    <node name="sam_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <remap from="robot_description" to="external/sam_description"/>

        <param name="use_gui" value="false"/>
        <rosparam param="source_list">["command_states"]</rosparam>
    </node>
    
    <node name="sam_robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <remap from="robot_description" to="external/sam_description"/>        
    </node>
       
    <!-- Extract relative position from the markers -->
    <node name="relative_pose_extraction" pkg="external_cams" type="pose_extraction.py" output="screen">
        <param name="reference_frame"    value="$(arg reference_frame)"/>

        <param name="makers_topic" value="/aruco_marker_publisher/markers"/>
        <param name="auv_position_topic" value="/cm/auv_position"/>
        <param name="ds_position_topic" value="/cm/ds_position"/>
        <param name="distance_topic" value="/cm/rel_distance"/>
        <param name="relative_pose_topic" value="/cm/relative_pose"/>
    </node>
</launch>